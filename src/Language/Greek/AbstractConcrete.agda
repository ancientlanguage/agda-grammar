module Language.Greek.AbstractConcrete where

open import Agda.Builtin.Equality
open import Prelude.Maybe
open import Common.RoundTrip
open import Language.Greek.Concrete renaming (Letter to ConcreteLetter)
open import Language.Greek.Abstract renaming (Letter to AbstractLetter)

fromConcrete : ConcreteLetter → LetterCaseFinal
fromConcrete Α = lcf (α uppercase)
fromConcrete Β = lcf (β uppercase)
fromConcrete Γ = lcf (γ uppercase)
fromConcrete Δ = lcf (δ uppercase)
fromConcrete Ε = lcf (ε uppercase)
fromConcrete Ζ = lcf (ζ uppercase)
fromConcrete Η = lcf (η uppercase)
fromConcrete Θ = lcf (θ uppercase)
fromConcrete Ι = lcf (ι uppercase)
fromConcrete Κ = lcf (κ uppercase)
fromConcrete Λ = lcf (ƛ uppercase)
fromConcrete Μ = lcf (μ uppercase)
fromConcrete Ν = lcf (ν uppercase)
fromConcrete Ξ = lcf (ξ uppercase)
fromConcrete Ο = lcf (ο uppercase)
fromConcrete Π = lcf (π uppercase)
fromConcrete Ρ = lcf (ρ uppercase)
fromConcrete Σ′ = lcf Σ′
fromConcrete Τ = lcf (τ uppercase)
fromConcrete Υ = lcf (υ uppercase)
fromConcrete Φ = lcf (φ uppercase)
fromConcrete Χ = lcf (χ uppercase)
fromConcrete Ψ = lcf (ψ uppercase)
fromConcrete Ω = lcf (ω uppercase)
fromConcrete α = lcf (α lowercase)
fromConcrete β = lcf (β lowercase)
fromConcrete γ = lcf (γ lowercase)
fromConcrete δ = lcf (δ lowercase)
fromConcrete ε = lcf (ε lowercase)
fromConcrete ζ = lcf (ζ lowercase)
fromConcrete η = lcf (η lowercase)
fromConcrete θ = lcf (θ lowercase)
fromConcrete ι = lcf (ι lowercase)
fromConcrete κ = lcf (κ lowercase)
fromConcrete ƛ = lcf (ƛ lowercase)
fromConcrete μ = lcf (μ lowercase)
fromConcrete ν = lcf (ν lowercase)
fromConcrete ξ = lcf (ξ lowercase)
fromConcrete ο = lcf (ο lowercase)
fromConcrete π = lcf (π lowercase)
fromConcrete ρ = lcf (ρ lowercase)
fromConcrete σ = lcf (σ notFinal)
fromConcrete ς = lcf (σ isFinal)
fromConcrete τ = lcf (τ lowercase)
fromConcrete υ = lcf (υ lowercase)
fromConcrete φ = lcf (φ lowercase)
fromConcrete χ = lcf (χ lowercase)
fromConcrete ψ = lcf (ψ lowercase)
fromConcrete ω = lcf (ω lowercase)

toConcrete : LetterCaseFinal → ConcreteLetter
toConcrete (lcf (α uppercase)) = Α
toConcrete (lcf (α lowercase)) = α
toConcrete (lcf (β uppercase)) = Β
toConcrete (lcf (β lowercase)) = β
toConcrete (lcf (γ uppercase)) = Γ
toConcrete (lcf (γ lowercase)) = γ
toConcrete (lcf (δ uppercase)) = Δ
toConcrete (lcf (δ lowercase)) = δ
toConcrete (lcf (ε uppercase)) = Ε
toConcrete (lcf (ε lowercase)) = ε
toConcrete (lcf (ζ uppercase)) = Ζ
toConcrete (lcf (ζ lowercase)) = ζ
toConcrete (lcf (η uppercase)) = Η
toConcrete (lcf (η lowercase)) = η
toConcrete (lcf (θ uppercase)) = Θ
toConcrete (lcf (θ lowercase)) = θ
toConcrete (lcf (ι uppercase)) = Ι
toConcrete (lcf (ι lowercase)) = ι
toConcrete (lcf (κ uppercase)) = Κ
toConcrete (lcf (κ lowercase)) = κ
toConcrete (lcf (ƛ uppercase)) = Λ
toConcrete (lcf (ƛ lowercase)) = ƛ
toConcrete (lcf (μ uppercase)) = Μ
toConcrete (lcf (μ lowercase)) = μ
toConcrete (lcf (ν uppercase)) = Ν
toConcrete (lcf (ν lowercase)) = ν
toConcrete (lcf (ξ uppercase)) = Ξ
toConcrete (lcf (ξ lowercase)) = ξ
toConcrete (lcf (ο uppercase)) = Ο
toConcrete (lcf (ο lowercase)) = ο
toConcrete (lcf (π uppercase)) = Π
toConcrete (lcf (π lowercase)) = π
toConcrete (lcf (ρ uppercase)) = Ρ
toConcrete (lcf (ρ lowercase)) = ρ
toConcrete (lcf Σ′) = Σ′
toConcrete (lcf (σ notFinal)) = σ
toConcrete (lcf (σ isFinal)) = ς
toConcrete (lcf (τ uppercase)) = Τ
toConcrete (lcf (τ lowercase)) = τ
toConcrete (lcf (υ uppercase)) = Υ
toConcrete (lcf (υ lowercase)) = υ
toConcrete (lcf (φ uppercase)) = Φ
toConcrete (lcf (φ lowercase)) = φ
toConcrete (lcf (χ uppercase)) = Χ
toConcrete (lcf (χ lowercase)) = χ
toConcrete (lcf (ψ uppercase)) = Ψ
toConcrete (lcf (ψ lowercase)) = ψ
toConcrete (lcf (ω uppercase)) = Ω
toConcrete (lcf (ω lowercase)) = ω

proof : (x : LetterCaseFinal) → x ≡ (fromConcrete (toConcrete x))
proof (lcf (α uppercase)) = refl
proof (lcf (α lowercase)) = refl
proof (lcf (β uppercase)) = refl
proof (lcf (β lowercase)) = refl
proof (lcf (γ uppercase)) = refl
proof (lcf (γ lowercase)) = refl
proof (lcf (δ uppercase)) = refl
proof (lcf (δ lowercase)) = refl
proof (lcf (ε uppercase)) = refl
proof (lcf (ε lowercase)) = refl
proof (lcf (ζ uppercase)) = refl
proof (lcf (ζ lowercase)) = refl
proof (lcf (η uppercase)) = refl
proof (lcf (η lowercase)) = refl
proof (lcf (θ uppercase)) = refl
proof (lcf (θ lowercase)) = refl
proof (lcf (ι uppercase)) = refl
proof (lcf (ι lowercase)) = refl
proof (lcf (κ uppercase)) = refl
proof (lcf (κ lowercase)) = refl
proof (lcf (ƛ uppercase)) = refl
proof (lcf (ƛ lowercase)) = refl
proof (lcf (μ uppercase)) = refl
proof (lcf (μ lowercase)) = refl
proof (lcf (ν uppercase)) = refl
proof (lcf (ν lowercase)) = refl
proof (lcf (ξ uppercase)) = refl
proof (lcf (ξ lowercase)) = refl
proof (lcf (ο uppercase)) = refl
proof (lcf (ο lowercase)) = refl
proof (lcf (π uppercase)) = refl
proof (lcf (π lowercase)) = refl
proof (lcf (ρ uppercase)) = refl
proof (lcf (ρ lowercase)) = refl
proof (lcf Σ′) = refl
proof (lcf (σ notFinal)) = refl
proof (lcf (σ isFinal)) = refl
proof (lcf (τ uppercase)) = refl
proof (lcf (τ lowercase)) = refl
proof (lcf (υ uppercase)) = refl
proof (lcf (υ lowercase)) = refl
proof (lcf (φ uppercase)) = refl
proof (lcf (φ lowercase)) = refl
proof (lcf (χ uppercase)) = refl
proof (lcf (χ lowercase)) = refl
proof (lcf (ψ uppercase)) = refl
proof (lcf (ψ lowercase)) = refl
proof (lcf (ω uppercase)) = refl
proof (lcf (ω lowercase)) = refl

ConcreteLetter⟳LetterCaseFinal : RoundTrip ConcreteLetter LetterCaseFinal
ConcreteLetter⟳LetterCaseFinal = roundTrip fromConcrete toConcrete proof
